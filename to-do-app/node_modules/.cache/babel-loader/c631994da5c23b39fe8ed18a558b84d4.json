{"ast":null,"code":"var _jsxFileName = \"/Users/chrysalis/Documents/Code_Directory/to-do-app/to-do-app/src/ToDoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TodoForm(_ref) {\n  _s();\n\n  let {\n    addTodo\n  } = _ref;\n  //? The first is the “value” and the second is how you are going to be setting the state. The state starts off empty, and as you add things to your state, it will add it to your list of to-do items.\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        value: value,\n        onChange: e => setValue(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TodoForm, \"dBtK6I2q1m3rcfzPBa0nrbv/iCI=\");\n\n_c = TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["/Users/chrysalis/Documents/Code_Directory/to-do-app/to-do-app/src/ToDoForm.js"],"names":["useState","TodoForm","addTodo","value","setValue","handleSubmit","e","preventDefault","target"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;AAEA,eAAe,SAASC,QAAT,OAA+B;AAAA;;AAAA,MAAb;AAAEC,IAAAA;AAAF,GAAa;AAC5C;AAEA,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BA,IAAAA,CAAC,CAACC,cAAF;AACA,QAAI,CAACJ,KAAL,EAAY;AACZD,IAAAA,OAAO,CAACC,KAAD,CAAP;AACAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD,GALD;;AAOA,sBACE;AAAA,2BACE;AAAM,MAAA,QAAQ,EAAEC,YAAhB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC,MADP;AAEE,QAAA,SAAS,EAAC,OAFZ;AAGE,QAAA,KAAK,EAAEF,KAHT;AAIE,QAAA,QAAQ,EAAGG,CAAD,IAAOF,QAAQ,CAACE,CAAC,CAACE,MAAF,CAASL,KAAV;AAJ3B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxBuBF,Q;;KAAAA,Q","sourcesContent":["import { useState } from \"react\";\n\nexport default function TodoForm({ addTodo }) {\n  //? The first is the “value” and the second is how you are going to be setting the state. The state starts off empty, and as you add things to your state, it will add it to your list of to-do items.\n\n  const [value, setValue] = useState(\"\");\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (!value) return;\n    addTodo(value);\n    setValue(\"\");\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <input\n          type=\"text\"\n          className=\"input\"\n          value={value}\n          onChange={(e) => setValue(e.target.value)}\n        />\n      </form>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}